<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
        
        <context:property-placeholder location="classpath:dbconfig.properties" />
        <!-- 配置自动扫描的包 -->
        <context:component-scan base-package="com.zdd.springmvc"></context:component-scan>
        <!-- 配置c3p0数据源 <bean id="dataSource" 配置c3p0数据源 -->
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
			<property name="driverClass" value="${datasource.driverClassName}" />
			<property name="jdbcUrl" value="${datasource.url}" />
			<property name="user" value="${datasource.username}" />
			<property name="password" value="${datasource.password}" />
			<property name="acquireIncrement" value="${acquireIncrement}" />
			<property name="initialPoolSize" value="${initialPoolSize}" />
			<property name="maxPoolSize" value="${maxPoolSize}" />
			<property name="minPoolSize" value="${minPoolSize}" />
			<property name="maxStatements" value="${maxStatements}" />
			<property name="maxStatementsPerConnection" value="${maxStatementsPerConnection}" />
		</bean>
		<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
			<property name="dataSource">
				<ref bean="dataSource" />
			</property>
		</bean>
		<!-- 配置事务bean -->
		<!-- 事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
		<!-- 事务通知 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="add*" propagation="REQUIRED" />  
				<tx:method name="get*" read-only="true" propagation="NOT_SUPPORTED" />
				<!-- <tx:method name="query*" read-only="true" propagation="NOT_SUPPORTED" /> -->
				<tx:method name="find*" read-only="true" propagation="NOT_SUPPORTED" />
				<tx:method name="*" propagation="REQUIRED" rollback-for="Exception.class" />
			</tx:attributes>
		</tx:advice>
		<!-- aop配置 -->
		<aop:config>
			<!-- 第一个*匹配方法的返回类型 第二*..匹配任何包以及其子包 第三个*匹配以相应表达式结尾的类或接口 第四个.*(..)匹配相应类中带任何参数的方法 -->
			<aop:pointcut id="txPointcut" expression="bean(*Service)" />
			<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
		</aop:config>
		
		<!-- 使用注解声明事务 -->
		<tx:annotation-driven transaction-manager="transactionManager"/>
		<import resource="classpath:spring-schedule-context.xml" />
        <!-- 配置视图解析器 如何把handler 方法返回值解析为实际的物理视图 -->
        <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
            <property name = "prefix" value="/WEB-INF/views/"></property>
            <property name = "suffix" value = ".jsp"></property>
        </bean>
        <mvc:view-controller path="/" view-name="redirect:/index"/>
</beans>